name: Train Model and Dockerize

on:
  push:
    paths:
      - 'MLProject/**'
  workflow_dispatch:

jobs:
  train-and-dockerize:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: MLProject/conda.yaml
        activate-environment: mlflow-env
        auto-activate-base: false
        use-mamba: true

    - name: Install MLflow
      run: pip install mlflow

    - name: Train Model via Conda
      working-directory: MLProject
      run: |
        conda run -n mlflow-env python modelling.py

    - name: Cek isi folder mlruns
      run: |
        echo "Cek isi MLProject/mlruns:"
        ls -l MLProject/mlruns || echo "❌ Folder belum terisi"

    - name: Debug isi mlruns
      run: |
        echo "📁 Isi folder mlruns secara rekursif:"
        ls -R MLProject/mlruns || echo "⚠️ mlruns belum terbentuk"

    - name: Get experiment ID from experiment name
      id: get_experiment_id
      run: |
        echo "📌 Mencari experiment_id secara otomatis dari direktori..."
        META_FILES=$(find MLProject/mlruns -name meta.yaml)

        for FILE in $META_FILES; do
          if grep -q "name: MyExperiment" "$FILE"; then
            EXP_ID=$(grep "experiment_id" "$FILE" | awk '{print $2}')
            echo "✅ EXP_ID ditemukan: $EXP_ID"
            echo "EXPERIMENT_ID=$EXP_ID" >> $GITHUB_ENV
            break
          fi
        done

        if [[ -z "$EXP_ID" ]]; then
          echo "❌ experiment_id tidak ditemukan."
          exit 1
        fi

    - name: Get latest run_id from any experiment
      id: get_run_id
      run: |
        echo "🔍 Mendeteksi run_id dari semua experiment..."
        EXP_DIR=$(find MLProject/mlruns -mindepth 2 -maxdepth 2 -type d | sort -r | head -n 1)
        if [[ -z "$EXP_DIR" ]]; then
          echo "❌ Tidak ada run ditemukan di MLProject/mlruns."
          exit 1
        fi
        RUN_ID=$(basename "$EXP_DIR")
        EXP_ID=$(basename $(dirname "$EXP_DIR"))
        echo "✅ Ditemukan EXP_ID=$EXP_ID dan RUN_ID=$RUN_ID"
        echo "EXPERIMENT_ID=$EXP_ID" >> $GITHUB_ENV
        echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
        echo "MODEL_PATH=MLProject/mlruns/$EXP_ID/$RUN_ID/artifacts/model" >> $GITHUB_ENV

    - name: Debug folder run
      run: |
        echo "📁 Isi folder run:"
        ls -R MLProject/mlruns/${{ env.EXPERIMENT_ID }}/${{ env.RUN_ID }}

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build Docker Image from MLflow Model
      run: |
        echo "🐳 Building Docker Image from MODEL_PATH=${{ env.MODEL_PATH }}"
        mlflow models build-docker \
          -m "file://${{ env.MODEL_PATH }}" \
          --env-manager=local \
          -n "${{ secrets.DOCKERHUB_USERNAME }}/online_shopper_model:latest"

    - name: Push Docker Image to DockerHub
      run: |
        docker push "${{ secrets.DOCKERHUB_USERNAME }}/online_shopper_model:latest"

    - name: Simpan URL Docker ke tautan_dockerhub.txt
      run: |
        echo "https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/online_shopper_model" > MLProject/tautan_dockerhub.txt

    - name: Commit hasil tautan DockerHub
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "Update tautan Docker Hub otomatis"
        file_pattern: 'MLProject/tautan_dockerhub.txt'
